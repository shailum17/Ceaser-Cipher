{"ast":null,"code":"import React from\"react\";import\"./styles.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CipherInfo=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"mac-window1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mac-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"dot red\"}),/*#__PURE__*/_jsx(\"span\",{className:\"dot yellow\"}),/*#__PURE__*/_jsx(\"span\",{className:\"dot green\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"main-heading\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDD10 Caesar Cipher\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"A Classical Encryption Technique\"})}),/*#__PURE__*/_jsx(\"hr\",{})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"info\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCCC Overview\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"The \",/*#__PURE__*/_jsx(\"strong\",{children:\"Caesar Cipher\"}),\" is one of the oldest encryption methods. It works by shifting letters forward by a fixed number of positions in the alphabet.\"]}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDD04 How It Works\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Choose a shift key (K)\"}),\": Determines how many places each letter moves.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Encrypt\"}),\": Each letter shifts forward by \",/*#__PURE__*/_jsx(\"code\",{children:\"K\"}),\" positions.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Decrypt\"}),\": Shift is reversed to retrieve the original text.\"]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Example (Shift Key = 3)\"}),/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Plaintext\"}),/*#__PURE__*/_jsx(\"td\",{children:\"H\"}),/*#__PURE__*/_jsx(\"td\",{children:\"E\"}),/*#__PURE__*/_jsx(\"td\",{children:\"L\"}),/*#__PURE__*/_jsx(\"td\",{children:\"L\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Ciphertext\"}),/*#__PURE__*/_jsx(\"td\",{children:\"K\"}),/*#__PURE__*/_jsx(\"td\",{children:\"H\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O\"}),/*#__PURE__*/_jsx(\"td\",{children:\"R\"})]})]})}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCA1 Strengths & Weaknesses\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"\\u2714 Advantages\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Simple & Fast\"}),\" \\u2013 Easy to implement with minimal computation.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"No Key Exchange Required\"}),\" \\u2013 Only a shift value is needed.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Useful for Learning\"}),\" \\u2013 A great introduction to cryptographic concepts.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Historical Significance\"}),\" \\u2013 One of the earliest encryption techniques.\"]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"\\u274C Disadvantages\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Easily Breakable\"}),\" \\u2013 Can be cracked using brute force (only 25 possible shifts).\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"No Key Variation\"}),\" \\u2013 A fixed shift makes it predictable.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Does Not Hide Letter Frequency\"}),\" \\u2013 Preserves patterns, making frequency analysis trivial.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Not Used in Modern Cryptography\"}),\" \\u2013 Not secure against modern cryptanalysis.\"]})]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDEE0 Python Code\"}),/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"def caesar_cipher(text, key, mode='encrypt'):\\n    alphabets = 'abcdefghijklmnopqrstuvwxyz'\\n    result = ''\\n\\n    for letter in text.lower():\\n        if letter in alphabets:\\n            index = alphabets.find(letter)\\n            new_index = (index + key) % 26 if mode == 'encrypt' else (index - key) % 26\\n            result += alphabets[new_index]\\n        else:\\n            result += letter\\n    return result\\n\\n# Encrypt\\nprint(caesar_cipher(\\\"Hello World\\\", 3))  \\n\\n# Decrypt\\nprint(caesar_cipher(\\\"Khoor Zruog\\\", 3, mode='decrypt'))\"})})]})]});};export default CipherInfo;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","CipherInfo","className","children","class"],"sources":["C:/Users/shail/OneDrive - Amity University/My Storage Area/Small Projects/Ceaser-Cipher/frontend/src/CipherInfo.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst CipherInfo = () => {\r\n  return (\r\n    <div className=\"mac-window1\">\r\n      <div className=\"mac-header\">\r\n        <span className=\"dot red\"></span>\r\n        <span className=\"dot yellow\"></span>\r\n        <span className=\"dot green\"></span>\r\n      </div>\r\n      <div className=\"content\">\r\n        < div class=\"main-heading\">\r\n        <h1>üîê Caesar Cipher</h1>\r\n        <p><strong>A Classical Encryption Technique</strong></p>\r\n        <hr />\r\n        </div>\r\n        \r\n<div class=\"info\">\r\n        <h2>üìå Overview</h2>\r\n        <p>\r\n          The <strong>Caesar Cipher</strong> is one of the oldest encryption methods. \r\n          It works by shifting letters forward by a fixed number of positions in the alphabet.\r\n        </p>\r\n\r\n        <h2>üîÑ How It Works</h2>\r\n        <ul>\r\n          <li><strong>Choose a shift key (K)</strong>: Determines how many places each letter moves.</li>\r\n          <li><strong>Encrypt</strong>: Each letter shifts forward by <code>K</code> positions.</li>\r\n          <li><strong>Decrypt</strong>: Shift is reversed to retrieve the original text.</li>\r\n        </ul>\r\n\r\n        <h3>Example (Shift Key = 3)</h3>\r\n        <table>\r\n          <tbody>\r\n            <tr><th>Plaintext</th><td>H</td><td>E</td><td>L</td><td>L</td><td>O</td></tr>\r\n            <tr><th>Ciphertext</th><td>K</td><td>H</td><td>O</td><td>O</td><td>R</td></tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <h2>üí° Strengths & Weaknesses</h2>\r\n\r\n      <h3>‚úî Advantages</h3>\r\n      <ul>\r\n        <li><strong>Simple & Fast</strong> ‚Äì Easy to implement with minimal computation.</li>\r\n        <li><strong>No Key Exchange Required</strong> ‚Äì Only a shift value is needed.</li>\r\n        <li><strong>Useful for Learning</strong> ‚Äì A great introduction to cryptographic concepts.</li>\r\n        <li><strong>Historical Significance</strong> ‚Äì One of the earliest encryption techniques.</li>\r\n      </ul>\r\n\r\n      <h3>‚ùå Disadvantages</h3>\r\n      <ul>\r\n        <li><strong>Easily Breakable</strong> ‚Äì Can be cracked using brute force (only 25 possible shifts).</li>\r\n        <li><strong>No Key Variation</strong> ‚Äì A fixed shift makes it predictable.</li>\r\n        <li><strong>Does Not Hide Letter Frequency</strong> ‚Äì Preserves patterns, making frequency analysis trivial.</li>\r\n        <li><strong>Not Used in Modern Cryptography</strong> ‚Äì Not secure against modern cryptanalysis.</li>\r\n      </ul>\r\n</div>\r\n\r\n        <h2>üõ† Python Code</h2>\r\n        <pre>\r\n          <code>\r\n{`def caesar_cipher(text, key, mode='encrypt'):\r\n    alphabets = 'abcdefghijklmnopqrstuvwxyz'\r\n    result = ''\r\n\r\n    for letter in text.lower():\r\n        if letter in alphabets:\r\n            index = alphabets.find(letter)\r\n            new_index = (index + key) % 26 if mode == 'encrypt' else (index - key) % 26\r\n            result += alphabets[new_index]\r\n        else:\r\n            result += letter\r\n    return result\r\n\r\n# Encrypt\r\nprint(caesar_cipher(\"Hello World\", 3))  \r\n\r\n# Decrypt\r\nprint(caesar_cipher(\"Khoor Zruog\", 3, mode='decrypt'))`}\r\n          </code>\r\n        </pre>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CipherInfo;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtB,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,mBACED,KAAA,QAAKE,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BH,KAAA,QAAKE,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBL,IAAA,SAAMI,SAAS,CAAC,SAAS,CAAO,CAAC,cACjCJ,IAAA,SAAMI,SAAS,CAAC,YAAY,CAAO,CAAC,cACpCJ,IAAA,SAAMI,SAAS,CAAC,WAAW,CAAO,CAAC,EAChC,CAAC,cACNF,KAAA,QAAKE,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBH,KAAA,QAAMI,KAAK,CAAC,cAAc,CAAAD,QAAA,eAC1BL,IAAA,OAAAK,QAAA,CAAI,4BAAgB,CAAI,CAAC,cACzBL,IAAA,MAAAK,QAAA,cAAGL,IAAA,WAAAK,QAAA,CAAQ,kCAAgC,CAAQ,CAAC,CAAG,CAAC,cACxDL,IAAA,QAAK,CAAC,EACD,CAAC,cAEdE,KAAA,QAAKI,KAAK,CAAC,MAAM,CAAAD,QAAA,eACTL,IAAA,OAAAK,QAAA,CAAI,uBAAW,CAAI,CAAC,cACpBH,KAAA,MAAAG,QAAA,EAAG,MACG,cAAAL,IAAA,WAAAK,QAAA,CAAQ,eAAa,CAAQ,CAAC,iIAEpC,EAAG,CAAC,cAEJL,IAAA,OAAAK,QAAA,CAAI,2BAAe,CAAI,CAAC,cACxBH,KAAA,OAAAG,QAAA,eACEH,KAAA,OAAAG,QAAA,eAAIL,IAAA,WAAAK,QAAA,CAAQ,wBAAsB,CAAQ,CAAC,kDAA+C,EAAI,CAAC,cAC/FH,KAAA,OAAAG,QAAA,eAAIL,IAAA,WAAAK,QAAA,CAAQ,SAAO,CAAQ,CAAC,mCAAgC,cAAAL,IAAA,SAAAK,QAAA,CAAM,GAAC,CAAM,CAAC,cAAW,EAAI,CAAC,cAC1FH,KAAA,OAAAG,QAAA,eAAIL,IAAA,WAAAK,QAAA,CAAQ,SAAO,CAAQ,CAAC,qDAAkD,EAAI,CAAC,EACjF,CAAC,cAELL,IAAA,OAAAK,QAAA,CAAI,yBAAuB,CAAI,CAAC,cAChCL,IAAA,UAAAK,QAAA,cACEH,KAAA,UAAAG,QAAA,eACEH,KAAA,OAAAG,QAAA,eAAIL,IAAA,OAAAK,QAAA,CAAI,WAAS,CAAI,CAAC,cAAAL,IAAA,OAAAK,QAAA,CAAI,GAAC,CAAI,CAAC,cAAAL,IAAA,OAAAK,QAAA,CAAI,GAAC,CAAI,CAAC,cAAAL,IAAA,OAAAK,QAAA,CAAI,GAAC,CAAI,CAAC,cAAAL,IAAA,OAAAK,QAAA,CAAI,GAAC,CAAI,CAAC,cAAAL,IAAA,OAAAK,QAAA,CAAI,GAAC,CAAI,CAAC,EAAI,CAAC,cAC7EH,KAAA,OAAAG,QAAA,eAAIL,IAAA,OAAAK,QAAA,CAAI,YAAU,CAAI,CAAC,cAAAL,IAAA,OAAAK,QAAA,CAAI,GAAC,CAAI,CAAC,cAAAL,IAAA,OAAAK,QAAA,CAAI,GAAC,CAAI,CAAC,cAAAL,IAAA,OAAAK,QAAA,CAAI,GAAC,CAAI,CAAC,cAAAL,IAAA,OAAAK,QAAA,CAAI,GAAC,CAAI,CAAC,cAAAL,IAAA,OAAAK,QAAA,CAAI,GAAC,CAAI,CAAC,EAAI,CAAC,EACzE,CAAC,CACH,CAAC,cAERL,IAAA,OAAAK,QAAA,CAAI,qCAAyB,CAAI,CAAC,cAEpCL,IAAA,OAAAK,QAAA,CAAI,mBAAY,CAAI,CAAC,cACrBH,KAAA,OAAAG,QAAA,eACEH,KAAA,OAAAG,QAAA,eAAIL,IAAA,WAAAK,QAAA,CAAQ,eAAa,CAAQ,CAAC,sDAA8C,EAAI,CAAC,cACrFH,KAAA,OAAAG,QAAA,eAAIL,IAAA,WAAAK,QAAA,CAAQ,0BAAwB,CAAQ,CAAC,wCAAgC,EAAI,CAAC,cAClFH,KAAA,OAAAG,QAAA,eAAIL,IAAA,WAAAK,QAAA,CAAQ,qBAAmB,CAAQ,CAAC,0DAAkD,EAAI,CAAC,cAC/FH,KAAA,OAAAG,QAAA,eAAIL,IAAA,WAAAK,QAAA,CAAQ,yBAAuB,CAAQ,CAAC,qDAA6C,EAAI,CAAC,EAC5F,CAAC,cAELL,IAAA,OAAAK,QAAA,CAAI,sBAAe,CAAI,CAAC,cACxBH,KAAA,OAAAG,QAAA,eACEH,KAAA,OAAAG,QAAA,eAAIL,IAAA,WAAAK,QAAA,CAAQ,kBAAgB,CAAQ,CAAC,sEAA8D,EAAI,CAAC,cACxGH,KAAA,OAAAG,QAAA,eAAIL,IAAA,WAAAK,QAAA,CAAQ,kBAAgB,CAAQ,CAAC,8CAAsC,EAAI,CAAC,cAChFH,KAAA,OAAAG,QAAA,eAAIL,IAAA,WAAAK,QAAA,CAAQ,gCAA8B,CAAQ,CAAC,iEAAyD,EAAI,CAAC,cACjHH,KAAA,OAAAG,QAAA,eAAIL,IAAA,WAAAK,QAAA,CAAQ,iCAA+B,CAAQ,CAAC,mDAA2C,EAAI,CAAC,EAClG,CAAC,EACN,CAAC,cAEEL,IAAA,OAAAK,QAAA,CAAI,0BAAc,CAAI,CAAC,cACvBL,IAAA,QAAAK,QAAA,cACEL,IAAA,SAAAK,QAAA,qiBAmBM,CAAC,CACJ,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}