{"ast":null,"code":"export async function encryptText(plaintext,key){try{const response=await fetch(\"http://localhost:5000/encrypt\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({plaintext,key})});return response.json();}catch(error){console.error(\"Error calling encryption API:\",error);return{error:\"Encryption failed\"};}}export async function decryptText(ciphertext,key){try{const response=await fetch(\"http://localhost:5000/decrypt\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({ciphertext,key})});return response.json();}catch(error){console.error(\"Error calling decryption API:\",error);return{error:\"Decryption failed\"};}}","map":{"version":3,"names":["encryptText","plaintext","key","response","fetch","method","headers","body","JSON","stringify","json","error","console","decryptText","ciphertext"],"sources":["C:/Users/shail/OneDrive - Amity University/My Storage Area/Small Projects/Ceaser-Cipher/frontend/src/api.js"],"sourcesContent":["export async function encryptText(plaintext, key) {\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/encrypt\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ plaintext, key })\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(\"Error calling encryption API:\", error);\r\n    return { error: \"Encryption failed\" };\r\n  }\r\n}\r\n\r\nexport async function decryptText(ciphertext, key) {\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/decrypt\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ ciphertext, key })\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(\"Error calling decryption API:\", error);\r\n    return { error: \"Decryption failed\" };\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAO,eAAe,CAAAA,WAAWA,CAACC,SAAS,CAAEC,GAAG,CAAE,CAChD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+B,CAAE,CAC5DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,SAAS,CAAEC,GAAI,CAAC,CACzC,CAAC,CAAC,CACF,MAAO,CAAAC,QAAQ,CAACO,IAAI,CAAC,CAAC,CACxB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD,MAAO,CAAEA,KAAK,CAAE,mBAAoB,CAAC,CACvC,CACF,CAEA,MAAO,eAAe,CAAAE,WAAWA,CAACC,UAAU,CAAEZ,GAAG,CAAE,CACjD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+B,CAAE,CAC5DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEK,UAAU,CAAEZ,GAAI,CAAC,CAC1C,CAAC,CAAC,CACF,MAAO,CAAAC,QAAQ,CAACO,IAAI,CAAC,CAAC,CACxB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD,MAAO,CAAEA,KAAK,CAAE,mBAAoB,CAAC,CACvC,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}