{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shail\\\\OneDrive - Amity University\\\\My Storage Area\\\\Small Projects\\\\caesar-cipher-web\\\\frontend\\\\src\\\\CipherForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { encryptText, decryptText } from './api.js';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CipherForm() {\n  _s();\n  const [text, setText] = useState('');\n  const [key, setKey] = useState('');\n  const [result, setResult] = useState('');\n  const handleEncrypt = async () => {\n    if (!text || isNaN(key) || key === '') {\n      setResult(\"‚ùå Error: Invalid input\");\n      return;\n    }\n    try {\n      const data = await encryptText(text, parseInt(key));\n      console.log(\"Encryption Response:\", data);\n      setResult(data.ciphertext || \"‚ùå Error: No ciphertext received\");\n    } catch (error) {\n      console.error(\"Encryption Error:\", error);\n      setResult(\"‚ùå Error: Encryption failed\");\n    }\n  };\n  const handleDecrypt = async () => {\n    if (!text || isNaN(key) || key === '') {\n      setResult(\"‚ùå Error: Invalid input\");\n      return;\n    }\n    try {\n      const data = await decryptText(text, parseInt(key));\n      console.log(\"Decryption Response:\", data);\n      setResult(data.plaintext || \"‚ùå Error: No plaintext received\");\n    } catch (error) {\n      console.error(\"Decryption Error:\", error);\n      setResult(\"‚ùå Error: Decryption failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mac-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mac-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cipher-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDD10 Caesar Cipher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"A Classical Encryption Technique\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter text\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter shift key\",\n        value: key,\n        onChange: e => setKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEncrypt,\n          children: \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDecrypt,\n          children: \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"result\",\n        children: [\"Result: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(CipherForm, \"59hoXY+4oDWLs1Hx8Q5h1LD+3bk=\");\n_c = CipherForm;\nexport default CipherForm;\nvar _c;\n$RefreshReg$(_c, \"CipherForm\");","map":{"version":3,"names":["React","useState","encryptText","decryptText","jsxDEV","_jsxDEV","CipherForm","_s","text","setText","key","setKey","result","setResult","handleEncrypt","isNaN","data","parseInt","console","log","ciphertext","error","handleDecrypt","plaintext","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shail/OneDrive - Amity University/My Storage Area/Small Projects/caesar-cipher-web/frontend/src/CipherForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { encryptText, decryptText } from './api.js';\r\nimport './styles.css';\r\n\r\nfunction CipherForm() {\r\n  const [text, setText] = useState('');\r\n  const [key, setKey] = useState('');\r\n  const [result, setResult] = useState('');\r\n\r\n  const handleEncrypt = async () => {\r\n    if (!text || isNaN(key) || key === '') {\r\n      setResult(\"‚ùå Error: Invalid input\");\r\n      return;\r\n    }\r\n    try {\r\n      const data = await encryptText(text, parseInt(key));\r\n      console.log(\"Encryption Response:\", data);\r\n      setResult(data.ciphertext || \"‚ùå Error: No ciphertext received\");\r\n    } catch (error) {\r\n      console.error(\"Encryption Error:\", error);\r\n      setResult(\"‚ùå Error: Encryption failed\");\r\n    }\r\n  };\r\n\r\n  const handleDecrypt = async () => {\r\n    if (!text || isNaN(key) || key === '') {\r\n      setResult(\"‚ùå Error: Invalid input\");\r\n      return;\r\n    }\r\n    try {\r\n      const data = await decryptText(text, parseInt(key));\r\n      console.log(\"Decryption Response:\", data);\r\n      setResult(data.plaintext || \"‚ùå Error: No plaintext received\");\r\n    } catch (error) {\r\n      console.error(\"Decryption Error:\", error);\r\n      setResult(\"‚ùå Error: Decryption failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mac-window\">\r\n      <div className=\"mac-header\">\r\n        <span className=\"dot red\"></span>\r\n        <span className=\"dot yellow\"></span>\r\n        <span className=\"dot green\"></span>\r\n      </div>\r\n      <div className=\"cipher-container\">\r\n        <h1>üîê Caesar Cipher</h1>\r\n        <p><strong>A Classical Encryption Technique</strong></p>\r\n        <hr />\r\n\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Enter text\" \r\n          value={text} \r\n          onChange={(e) => setText(e.target.value)} \r\n        />\r\n        <input \r\n          type=\"number\" \r\n          placeholder=\"Enter shift key\" \r\n          value={key} \r\n          onChange={(e) => setKey(e.target.value)} \r\n        />\r\n        <div className=\"button-group\">\r\n          <button onClick={handleEncrypt}>Encrypt</button>\r\n          <button onClick={handleDecrypt}>Decrypt</button>\r\n        </div>\r\n\r\n        <h3 className=\"result\">Result: {result}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CipherForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,UAAU;AACnD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACN,IAAI,IAAIO,KAAK,CAACL,GAAG,CAAC,IAAIA,GAAG,KAAK,EAAE,EAAE;MACrCG,SAAS,CAAC,wBAAwB,CAAC;MACnC;IACF;IACA,IAAI;MACF,MAAMG,IAAI,GAAG,MAAMd,WAAW,CAACM,IAAI,EAAES,QAAQ,CAACP,GAAG,CAAC,CAAC;MACnDQ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,IAAI,CAAC;MACzCH,SAAS,CAACG,IAAI,CAACI,UAAU,IAAI,iCAAiC,CAAC;IACjE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCR,SAAS,CAAC,4BAA4B,CAAC;IACzC;EACF,CAAC;EAED,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACd,IAAI,IAAIO,KAAK,CAACL,GAAG,CAAC,IAAIA,GAAG,KAAK,EAAE,EAAE;MACrCG,SAAS,CAAC,wBAAwB,CAAC;MACnC;IACF;IACA,IAAI;MACF,MAAMG,IAAI,GAAG,MAAMb,WAAW,CAACK,IAAI,EAAES,QAAQ,CAACP,GAAG,CAAC,CAAC;MACnDQ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,IAAI,CAAC;MACzCH,SAAS,CAACG,IAAI,CAACO,SAAS,IAAI,gCAAgC,CAAC;IAC/D,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCR,SAAS,CAAC,4BAA4B,CAAC;IACzC;EACF,CAAC;EAED,oBACER,OAAA;IAAKmB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBpB,OAAA;MAAKmB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBpB,OAAA;QAAMmB,SAAS,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjCxB,OAAA;QAAMmB,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpCxB,OAAA;QAAMmB,SAAS,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACNxB,OAAA;MAAKmB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BpB,OAAA;QAAAoB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBxB,OAAA;QAAAoB,QAAA,eAAGpB,OAAA;UAAAoB,QAAA,EAAQ;QAAgC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxDxB,OAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAENxB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBC,KAAK,EAAExB,IAAK;QACZyB,QAAQ,EAAGC,CAAC,IAAKzB,OAAO,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFxB,OAAA;QACEyB,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAEtB,GAAI;QACXuB,QAAQ,EAAGC,CAAC,IAAKvB,MAAM,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACFxB,OAAA;QAAKmB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BpB,OAAA;UAAQ+B,OAAO,EAAEtB,aAAc;UAAAW,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChDxB,OAAA;UAAQ+B,OAAO,EAAEd,aAAc;UAAAG,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eAENxB,OAAA;QAAImB,SAAS,EAAC,QAAQ;QAAAC,QAAA,GAAC,UAAQ,EAACb,MAAM;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CApEQD,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAsEnB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}